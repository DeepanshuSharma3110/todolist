{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const fetchData = createAsyncThunk('fetchData', async()=>{\n//     const response = await fetch('https://jsonplaceholder.typicode.com/todos')\n//     return response.json();\n// },);\n\n// const postData = createAsyncThunk('postData',async ()=>{\n//     await fetch('https://jsonplaceholder.typicode.com/posts',{\n//         method:'POST',\n//         body:JSON.stringify({\n//             title:'ram',\n//            // body:'ram',\n//            // userId:1,\n//         }),\n//         header:{\n//             'content-type':'application/json; charset=UTF-8',\n//         },\n//     })\n//     .then((response)=>response.json())\n//     .then((json)=>console.log(json))\n// })\n\n// const fetchReducer = createSlice({\n//     name:'fetchReducer',\n//     initialState:{\n//         data:[],\n//         loading:false,\n//         error:null,\n//     },\n//     reducers:{},\n\n//     extraReducers:(builder)=>{\n//         //fetch\n//         builder.addCase(fetchData.fulfilled,(state,action)=>{\n//             state.data=action.payload;\n//             state.loading=false;\n//         });\n//         builder.addCase(fetchData.pending,(state,action)=>{\n//             state.loading=true;\n//             state.error=null;\n//         });\n//         builder.addCase(fetchData.rejected,(state,action)=>{\n//             state.error=action.error.message;\n//         });\n//         //post\n//         builder.addCase(postData.fulfilled,(state,action)=>{\n//             state.data.push(action.payload);\n//             state.loading=false\n//         });\n//         builder.addCase(postData.pending,(state,action)=>{\n//             state.loading=true;\n//             state.error=null;\n//         })\n//         builder.addCase(postData.rejected,(state,action)=>{\n//             state.error=action.error.message;\n//         })\n\n//     }\n// })\n\n// export default fetchReducer.reducer;\n// export {fetchData,postData};","map":{"version":3,"names":[],"sources":["D:/coding ninja projects/skillTest/todolist/src/redux/reducer/fetchReducer.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// const fetchData = createAsyncThunk('fetchData', async()=>{\r\n//     const response = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n//     return response.json();\r\n// },);\r\n\r\n// const postData = createAsyncThunk('postData',async ()=>{\r\n//     await fetch('https://jsonplaceholder.typicode.com/posts',{\r\n//         method:'POST',\r\n//         body:JSON.stringify({\r\n//             title:'ram',\r\n//            // body:'ram',\r\n//            // userId:1,\r\n//         }),\r\n//         header:{\r\n//             'content-type':'application/json; charset=UTF-8',\r\n//         },\r\n//     })\r\n//     .then((response)=>response.json())\r\n//     .then((json)=>console.log(json))\r\n// })\r\n\r\n// const fetchReducer = createSlice({\r\n//     name:'fetchReducer',\r\n//     initialState:{\r\n//         data:[],\r\n//         loading:false,\r\n//         error:null,\r\n//     },\r\n//     reducers:{},\r\n\r\n//     extraReducers:(builder)=>{\r\n//         //fetch\r\n//         builder.addCase(fetchData.fulfilled,(state,action)=>{\r\n//             state.data=action.payload;\r\n//             state.loading=false;\r\n//         });\r\n//         builder.addCase(fetchData.pending,(state,action)=>{\r\n//             state.loading=true;\r\n//             state.error=null;\r\n//         });\r\n//         builder.addCase(fetchData.rejected,(state,action)=>{\r\n//             state.error=action.error.message;\r\n//         });\r\n//         //post\r\n//         builder.addCase(postData.fulfilled,(state,action)=>{\r\n//             state.data.push(action.payload);\r\n//             state.loading=false\r\n//         });\r\n//         builder.addCase(postData.pending,(state,action)=>{\r\n//             state.loading=true;\r\n//             state.error=null;\r\n//         })\r\n//         builder.addCase(postData.rejected,(state,action)=>{\r\n//             state.error=action.error.message;\r\n//         })\r\n\r\n\r\n//     }\r\n// })\r\n\r\n// export default fetchReducer.reducer;\r\n// export {fetchData,postData};\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}