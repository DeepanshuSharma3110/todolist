{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding ninja projects\\\\skillTest\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData, postData } from \"./redux/reducer/fetchReducer\";\nimport { useEffect, useState } from \"react\";\nimport style from \"./app.module.css\";\nimport { addUser } from \"./redux/reducer/userReducer\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const ref = use;\n  // Fetching the data\n  useEffect(() => {\n    dispatch(fetchData());\n    dispatch(postData());\n  }, [dispatch]);\n\n  // Selectors\n  const data = useSelector(state => state.fetch.data);\n  const allUniqueUsers = [...new Set(data.map(user => user.userId))];\n  const selectedUser = useSelector(state => state.user);\n  const [todo, setTodo] = useState();\n  // State for selected user\n  const [selectedUserId, setSelectedUserId] = useState('0');\n\n  //createNewPost\n  const creatPost = () => {\n    dispatch(addUser(todo, todo, selectedUserId));\n  };\n\n  // Filter the data based on the selected user\n  const filteredData = data.filter(user => user.userId === Number(selectedUserId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TodoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select User: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUser,\n            onChange: e => setSelectedUserId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"All Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), allUniqueUsers.map(userId => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: userId,\n              children: userId\n            }, userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: creatPost,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo,\n            ref: todo,\n            className: style.input,\n            placeholder: \"Enter The todo\",\n            onChange: e => setTodo(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"submit\", {\n            children: \"POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 153\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.todoBox,\n        children: filteredData.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.todoItem,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: user.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: user.id,\n            value: user.completed,\n            checked: user.completed,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: user.id,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yVRXU2hWUwF5mX3MVz0TfEehTRc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","fetchData","postData","useEffect","useState","style","addUser","useRef","jsxDEV","_jsxDEV","App","_s","dispatch","ref","use","data","state","fetch","allUniqueUsers","Set","map","user","userId","selectedUser","todo","setTodo","selectedUserId","setSelectedUserId","creatPost","filteredData","filter","Number","className","body","children","container","heading","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onSubmit","method","type","input","placeholder","todoBox","todoItem","title","id","completed","checked","readOnly","htmlFor","_c","$RefreshReg$"],"sources":["D:/coding ninja projects/skillTest/todolist/src/App.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData, postData } from \"./redux/reducer/fetchReducer\";\nimport { useEffect, useState } from \"react\";\nimport style from \"./app.module.css\";\nimport { addUser } from \"./redux/reducer/userReducer\";\nimport { useRef } from \"react\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const ref=use\n  // Fetching the data\n  useEffect(() => {\n    dispatch(fetchData());\n    dispatch(postData())\n  }, [dispatch]);\n\n\n  // Selectors\n  const data = useSelector((state) => state.fetch.data);\n  const allUniqueUsers = [...new Set(data.map(user => user.userId))];\n  const selectedUser = useSelector((state) => state.user);\n  const [todo,setTodo] = useState();\n  // State for selected user\n  const [selectedUserId, setSelectedUserId] = useState('0');\n\n\n\n  //createNewPost\n  const creatPost = ()=>{\n    dispatch(addUser(todo,todo,selectedUserId))\n  }\n\n  // Filter the data based on the selected user\n  const filteredData = data.filter((user) => user.userId === Number(selectedUserId));\n\n  return (\n    <div className={style.body}>\n      <div className={style.container}>\n        {/* Heading */}\n        <div className={style.heading}>\n          <h2>TodoList</h2>\n          <div>\n            <label>Select User: </label>\n            <select value={selectedUser} onChange={(e) =>  setSelectedUserId(e.target.value)}>\n              <option value=\"0\">All Users</option>\n              {allUniqueUsers.map((userId) => (\n                <option key={userId} value={userId}>{userId}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n\n        {/* add todo */}\n              <div className=\"input-field\">\n                <form onSubmit={creatPost} method=\"POST\">\n              <input type=\"text\" value={todo} ref={todo} className={style.input} placeholder=\"Enter The todo\" onChange={(e)=>setTodo(e.target.value)}/> <submit>POST</submit>\n                </form>\n              </div>\n      \n        {/* Todo list */}\n        <div className={style.todoBox}>\n          {filteredData.map((user) => (\n            <div key={user.id} className={style.todoItem}>\n              <h3>{user.title}</h3>\n              <input \n                type=\"radio\" \n                id={user.id} \n                value={user.completed} \n                checked={user.completed} \n                readOnly \n              />\n              <label htmlFor={user.id}>Completed</label>\n              <span>|</span>\n              <h4>Edit</h4>\n              <span>|</span>\n              <h4>Delete</h4>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}