{"ast":null,"code":"// redux/reducer/fetchReducer.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Fetch data thunk\nconst fetchData = createAsyncThunk('fetchData', async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  return response.json();\n});\n\n// Post data thunk\nconst postData = createAsyncThunk('postData', async ({\n  userId,\n  id,\n  title,\n  completed\n}) => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    body: JSON.stringify({\n      userId,\n      id,\n      title,\n      completed\n    }),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  return response.json();\n});\n\n// Delete post thunk\nconst deletePost = createAsyncThunk('deletePost', async id => {\n  await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n    method: 'DELETE'\n  });\n  return id;\n});\n\n// Update post thunk\nconst updatePost = createAsyncThunk('updatePost', async ({\n  id,\n  userId,\n  title,\n  completed\n}) => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      userId,\n      id,\n      title,\n      completed\n    }),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  return response.json();\n});\n\n//toggle completed\nconst toggleCompleted = createAsyncThunk('toggleCompleted', async({\n  id\n}));\n\n// Slice for managing fetch and post data\nconst fetchReducer = createSlice({\n  name: 'fetchReducer',\n  initialState: {\n    data: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    // Fetch cases\n    builder.addCase(fetchData.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(fetchData.pending, state => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(fetchData.rejected, (state, action) => {\n      state.error = action.error.message;\n      state.loading = false;\n    });\n\n    // Post cases\n    builder.addCase(postData.fulfilled, (state, action) => {\n      state.data.push(action.payload);\n      state.loading = false;\n    });\n    builder.addCase(postData.pending, state => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(postData.rejected, (state, action) => {\n      state.error = action.error.message;\n      state.loading = false;\n    });\n\n    // Delete cases\n    builder.addCase(deletePost.fulfilled, (state, action) => {\n      state.data = state.data.filter(u => u.id !== action.payload);\n      state.loading = false;\n    });\n    builder.addCase(deletePost.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(deletePost.rejected, (state, action) => {\n      state.error = action.error.message;\n      state.loading = false;\n    });\n\n    // Update cases\n    builder.addCase(updatePost.fulfilled, (state, action) => {\n      const index = state.data.findIndex(u => u.id === action.payload.id);\n      if (index !== -1) {\n        state.data[index] = action.payload;\n      }\n      state.loading = false;\n    });\n    builder.addCase(updatePost.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(updatePost.rejected, (state, action) => {\n      state.error = action.error.message;\n      state.loading = false;\n    });\n  }\n});\nexport default fetchReducer.reducer;\nexport { fetchData, postData, deletePost, updatePost };","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchData","response","fetch","json","postData","userId","id","title","completed","method","body","JSON","stringify","headers","deletePost","updatePost","toggleCompleted","async","fetchReducer","name","initialState","data","loading","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","pending","rejected","message","push","filter","u","index","findIndex","reducer"],"sources":["D:/coding ninja projects/skillTest/todolist/src/redux/reducer/fetchReducer.js"],"sourcesContent":["// redux/reducer/fetchReducer.js\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Fetch data thunk\r\nconst fetchData = createAsyncThunk('fetchData', async () => {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\r\n  return response.json();\r\n});\r\n\r\n// Post data thunk\r\nconst postData = createAsyncThunk('postData', async ({ userId, id, title, completed }) => {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      userId,\r\n      id,\r\n      title,\r\n      completed,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  return response.json();\r\n});\r\n\r\n// Delete post thunk\r\nconst deletePost = createAsyncThunk('deletePost', async (id) => {\r\n  await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return id;\r\n});\r\n\r\n// Update post thunk\r\nconst updatePost = createAsyncThunk('updatePost', async ({ id, userId, title, completed }) => {\r\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify({\r\n      userId,\r\n      id,\r\n      title,\r\n      completed\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  return response.json();\r\n});\r\n\r\n\r\n//toggle completed\r\nconst toggleCompleted = createAsyncThunk('toggleCompleted', async({id}))\r\n\r\n// Slice for managing fetch and post data\r\nconst fetchReducer = createSlice({\r\n  name: 'fetchReducer',\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Fetch cases\r\n    builder.addCase(fetchData.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(fetchData.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(fetchData.rejected, (state, action) => {\r\n      state.error = action.error.message;\r\n      state.loading = false;\r\n    });\r\n\r\n    // Post cases\r\n    builder.addCase(postData.fulfilled, (state, action) => {\r\n      state.data.push(action.payload);\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(postData.pending, (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(postData.rejected, (state, action) => {\r\n      state.error = action.error.message;\r\n      state.loading = false;\r\n    });\r\n\r\n    // Delete cases\r\n    builder.addCase(deletePost.fulfilled, (state, action) => {\r\n      state.data = state.data.filter((u) => u.id !== action.payload);\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(deletePost.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(deletePost.rejected, (state, action) => {\r\n      state.error = action.error.message;\r\n      state.loading = false;\r\n    });\r\n\r\n    // Update cases\r\n    builder.addCase(updatePost.fulfilled, (state, action) => {\r\n      const index = state.data.findIndex((u) => u.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.data[index] = action.payload;\r\n      }\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(updatePost.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(updatePost.rejected, (state, action) => {\r\n      state.error = action.error.message;\r\n      state.loading = false;\r\n    });\r\n  }\r\n});\r\n\r\nexport default fetchReducer.reducer;\r\nexport { fetchData, postData, deletePost, updatePost };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}